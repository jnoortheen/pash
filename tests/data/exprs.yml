env:
- inp: $WAKKA
  exp: ox.env['WAKKA']
- inp: ${None or $JAWAKA}
  exp: ox.env[None or ox.env['JAWAKA']]

captured:
- inp: $(cmd sub-cmd --opt)
  exp: ox.cmd('cmd', 'sub-cmd', '--opt').out()
pipe:
- inp: $(ls | grep wakka)
  exp: ox.cmd('ls').pipe('grep', 'wakka').out()
- inp: $(ls | grep wakka | grep jawaka)
  exp: ox.cmd('ls').pipe('grep', 'wakka').pipe('grep', 'jawaka').out()
bg:
  # - inp: $(emacs ugggh & echo done) - this should be a syntax error
  #   exp: ox.cmd('emacs', 'ugggh', bg=True).cmd('echo', 'done').run(capture=True)
- inp: $(emacs ugggh&)
  exp: ox.cmd('emacs', 'ugggh', bg=True).out()
- inp: $(emacs ugggh &)
  exp: ox.cmd('emacs', 'ugggh', bg=True).out()
- inp: $(emacs ugggh&)
  exp: ox.cmd('emacs', 'ugggh', bg=True).out()
# _regex:
# - inp: '`hello`'
#   exp: ox.Pattern('hello').regex()
# - inp: $(ls `#[Ff]+i*LE` -l)
#   exp: ox.cmd('ls', ox.Pattern('#[Ff]+i*LE').regex(), '-l').out()
# - inp: print(`#.*`)
#   exp: print(ox.Pattern('#.*').regex())
# _prefix-regex:
# - inp: $(ls r`[Ff]+i*LE` -l)
#   exp: ox.cmd('ls', '[Ff]+i*LE', '-l').out()
# - inp: $(ls f`{mypattern[0]}+` -l)
#   exp: ox.cmd('ls', ox.Pattern('[Ff]+i*LE').regex(), '-l').run(capture=True)
# - inp: print(@foo`.*`)
#   exp: print(ox.Pattern('.*').invoke(foo))
help:
- inp: range?
  exp: ox.help(range)
- inp: range?.index?
  exp: ox.help(ox.help(range).index)
- inp: range??
  exp: ox.superhelp(range)
paths:
- inp: p"/foo"
  exp: ox.path('/foo')
_fpaths:
- inp: pf"/foo"
  exp: f'/foo'
- inp: fp"/foo"
  exp: f'/foo'
- inp: pF"/foo"
  exp: f'/foo'
- inp: Fp"/foo"
  exp: f'/foo'
- inp: pf"/foo{1+1}"
  exp: f'/foo{1 + 1}'
- inp: fp"/foo{1+1}"
  exp: f'/foo{1 + 1}'
- inp: pF"/foo{1+1}"
  exp: f'/foo{1 + 1}'
- inp: Fp"/foo{1+1}"
  exp: f'/foo{1 + 1}'

proc-py:
- inp: $(ls {None or x})
  exp: ox.cmd('ls', None or x).out()

redirects:
- inp: $(ls > x.py)
  exp: "ox.cmd('ls', redirects={'>': 'x.py'}).out()"
- inp: $(ls 2> x.py)
  exp: "ox.cmd('ls', redirects={'2>': 'x.py'}).out()"
- inp: $(ls >> x.py)
  exp: "ox.cmd('ls', redirects={'>>': 'x.py'}).out()"
- inp: $(ls | grep wakka > x.py)
  exp: "ox.cmd('ls').pipe('grep', 'wakka', redirects={'>': 'x.py'}).out()"
- inp: $(ls | grep wakka >> x.py)
  exp: "ox.cmd('ls').pipe('grep', 'wakka', redirects={'>>': 'x.py'}).out()"
